class CreateAccount(QDialog):
    def __init__(self):
        super(CreateAccount, self).__init__()
        loadUi("CreateAccount.ui", self)

        lis = list()
        for i in range(1901, 2021): lis.append(str(i))
        self.Back.clicked.connect(self.gotoBack)
        self.Submit.clicked.connect(self.gotoSubmit)

        self.BirthYear.addItems(lis)
        self.BirthYear.activated.connect(self.gotoBirthYearSeleced)
        self.BirthDate.activated.connect(self.gotoBirthDateSeleced)

        self.Male.toggled.connect(lambda: self.gotoGenderSelected(self.Male))
        self.Female.toggled.connect(lambda: self.gotoGenderSelected(self.Female))
        self.ThirdGender.toggled.connect(lambda: self.gotoGenderSelected(self.ThirdGender))

    def gotoBack(self):
        a = SecondLayer()
        widget.addWidget(a)
        widget.setCurrentIndex(widget.currentIndex() + 1)

    def gotoBirthYearSeleced(self):
        if int(self.BirthYear.currentText())%4 == 0 and int(self.BirthYear.currentText())%100 != 0:
            self.BirthMonth.clear()
            lis = ["01", "02", "03", "04", "05", "06", "07", "08", "09"]
            for i in range(10, 32): lis.append(str(i))
            self.BirthMonth.addItem("01", lis)
            lis.pop()
            lis.pop()
            self.BirthMonth.addItem("02", lis)
            lis.append("30")
            lis.append("31")
            self.BirthMonth.addItem("03", lis)
            lis.pop()
            self.BirthMonth.addItem("04", lis)
            lis.append("31")
            self.BirthMonth.addItem("05", lis)
            lis.pop()
            self.BirthMonth.addItem("06", lis)
            lis.append("31")
            self.BirthMonth.addItem("07", lis)
            self.BirthMonth.addItem("08", lis)
            lis.pop()
            self.BirthMonth.addItem("09", lis)
            lis.append("31")
            self.BirthMonth.addItem("10", lis)
            lis.pop()
            self.BirthMonth.addItem("11", lis)
            lis.append("31")
            self.BirthMonth.addItem("12", lis)
            self.BirthMonth.activated.connect(self.gotoBirthMonthSeleced)
        else:
            self.BirthMonth.clear()
            lis = ["01", "02", "03", "04", "05", "06", "07", "08", "09"]
            for i in range(10, 32): lis.append(str(i))
            self.BirthMonth.addItem("01", lis)
            lis.pop()
            lis.pop()
            lis.pop()
            self.BirthMonth.addItem("02", lis)
            lis.append("30")
            lis.append("31")
            self.BirthMonth.addItem("03", lis)
            lis.pop()
            self.BirthMonth.addItem("04", lis)
            lis.append("31")
            self.BirthMonth.addItem("05", lis)
            lis.pop()
            self.BirthMonth.addItem("06", lis)
            lis.append("31")
            self.BirthMonth.addItem("07", lis)
            self.BirthMonth.addItem("08", lis)
            lis.pop()
            self.BirthMonth.addItem("09", lis)
            lis.append("31")
            self.BirthMonth.addItem("10", lis)
            lis.pop()
            self.BirthMonth.addItem("11", lis)
            lis.append("31")
            self.BirthMonth.addItem("12", lis)
            self.BirthMonth.activated.connect(self.gotoBirthMonthSeleced)

    def gotoBirthMonthSeleced(self, index):
        self.BirthDate.clear()
        self.BirthDate.addItems(self.BirthMonth.itemData(index))

    def gotoBirthDateSeleced(self):
        pass

    def gotoGenderSelected(self, para):
        global GenderBoolean
        GenderBoolean = para.isChecked()
        global GenderEntry
        GenderEntry = para.text()

    def gotoSubmit(self):
        a = self.Username.text()
        b = self.Password.text()
        c = self.ConfirmPassword.text()
        d = self.PasswordHint.text()
        e = self.BirthYear.currentText()
        f = self.BirthMonth.currentText()
        g = self.BirthDate.currentText()

        A = open("Database.txt", "r")
        previous_entry = False
        for line in A:
            line = line[1:len(line) - 2]
            user_info = line.split("][")
            if user_info[0] == a:
                previous_entry = True
                break
        A.close()

        if previous_entry == True:
            self.errorLabelUsername.setText("* Username already exists !")
        elif len(a)==0 or len(a)>20 or '[' in a or ']' in a or len(b)==0 or len(b)<6 or len(b)>30 or '[' in b or ']' in b \
        or b!=c or len(d)==0 or len(d)>30 or '[' in d or ']' in d or len(g)==0 or GenderBoolean==False:
            if len(a) == 0:
                self.errorLabelUsername.setText("* Username cannot be empty !")
            elif len(a) > 20:
                self.errorLabelUsername.setText("* Username cannot have more than 20 characters !")
            elif '[' in a or ']' in a:
                self.errorLabelUsername.setText("* Username cannot contain '[' or ']' !")
            else:
                self.errorLabelUsername.setText("")
            if len(b) == 0:
                self.errorLabelPassword.setText("* Password cannot be empty !")
            elif len(b) < 6:
                self.errorLabelPassword.setText("* Password must contain at least 6 characters !")
            elif len(b) > 30:
                self.errorLabelPassword.setText("* Password cannot have more than 30 characters !")
            elif '[' in b or ']' in b:
                self.errorLabelPassword.setText("* Password cannot contain '[' or ']' !")
            else:
                self.errorLabelPassword.setText("")
            if b != c:
                self.errorLabelConfirmPassword.setText("* Passwords do not match !")
            else:
                self.errorLabelConfirmPassword.setText("")
            if len(d) == 0:
                self.errorLabelPasswordHint.setText("* Password cannot be empty !")
            elif len(d) > 30:
                self.errorLabelPasswordHint.setText("* Password Hint cannot have more than 30 characters !")
            elif '[' in d or ']' in d:
                self.errorLabelPasswordHint.setText("* Password Hint cannot contain '[' or ']' !")
            else:
                self.errorLabelPasswordHint.setText("")
            if len(g) == 0:
                self.errorLabelDateOfBirth.setText("* You must select your Date of Birth !")
            else:
                self.errorLabelDateOfBirth.setText("")
            if GenderBoolean == False:
                self.errorLabelGender.setText("* You must select your Gender !")
            else:
                self.errorLabelGender.setText("")
        else:
            self.successLabel.setText("Account created succeessfully!")
            mixer.music.play()
            #time.sleep(0.8)
            A = open("Database.txt", "a")
            global GenderEntry
            A.write(f"[{a}][{b}][{d}][{g}/{f}/{e}][{GenderEntry}]\n")
            A.close()
            time.sleep(1.0)
            a = SecondLayer()
            widget.addWidget(a)
            widget.setCurrentIndex(widget.currentIndex() + 1)
